{"version":3,"sources":["index.scss","Navbar.scss","../../assets/styles/_mixins.scss","../../assets/styles/_variables.scss","../../../node_modules/rfs/scss.scss","array.scss"],"names":[],"mappings":"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","file":"main.12751e4d.chunk.css","sourcesContent":["html,\nbody {\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  height: 100%;\n  font-family: \"Montserrat\", sans-serif;\n}\n\n.App {\n  background-image: url(\"./assets/images/bg.svg\");\n  background-repeat: no-repeat;\n  background-position: center;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n  min-height: 100vh;\n}\n\ninput,\ntextarea,\nbutton,\nselect,\nspan,\na,\n.reset-icon {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n","@import \"~rfs/scss\";\n@import \"../../assets/styles/mixins\";\n@import \"../../assets/styles/functions\";\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 7rem;\n  padding: 0 2rem 0 2rem;\n\n  @include mobile {\n    height: 4rem;\n    padding: 0 1rem 0 1rem;\n  }\n\n  section.controls {\n    display: flex;\n    align-items: center;\n  }\n\n  section.controls > * {\n    margin: 0 0.5rem 0 0.5rem;\n  }\n\n  button.start {\n    @include button;\n    background-color: color(\"accent\");\n    color: color(\"white\");\n    font-weight: 400;\n  }\n\n  .fab {\n    @include fab;\n    background-color: color(\"primary\");\n\n    .icon {\n      @include font-size(20px);\n      color: color(\"white\");\n\n      @include mobile {\n        @include font-size(14px);\n      }\n    }\n\n    &.disabled {\n      cursor: not-allowed;\n      opacity: 0.8;\n    }\n  }\n\n  .reset-icon {\n    @include font-size(35px);\n    transition: all 0.2s ease-in-out;\n    color: color(\"primary\");\n\n    &:hover {\n      cursor: pointer;\n      transform: rotate(360deg) scale(1.1);\n    }\n  }\n}\n\n.settings-container {\n  position: relative;\n\n  .settings {\n    opacity: 0;\n    background-color: color(\"primary\");\n    position: absolute;\n    top: 85%;\n    right: 85%;\n    padding: 50% 70% 50% 70%;\n    border-radius: 5px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: opacity 0.3s ease-in-out;\n\n    p {\n      color: color(\"white\");\n\n      @include mobile {\n        font-size: 14px;\n      }\n\n      &:first-of-type {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .settings.active {\n    opacity: 1;\n  }\n}\n\n.info-container {\n  position: relative;\n\n  .info {\n    opacity: 0;\n    background-color: color(\"primary\");\n    position: absolute;\n    width: 30vh;\n    top: 85%;\n    left: 85%;\n    padding: 50% 70% 50% 70%;\n    border-radius: 5px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: opacity 0.3s ease-in-out;\n\n    p {\n      color: color(\"white\");\n\n      @include mobile {\n        font-size: 14px;\n        width: 30vh;\n      }\n\n      &:first-of-type {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .info.active {\n    opacity: 1;\n  }\n}\n\n.choose-algorythm-container {\n  position: relative;\n  text-align: center;\n\n  .choose-algorythm {\n    @include button;\n    text-transform: none;\n    border: 1px solid color(\"primary\");\n    background-color: transparent;\n    color: color(\"primary\");\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    appearance: none;\n    position: relative;\n\n    &.disabled {\n      cursor: not-allowed;\n      opacity: 0.8;\n    }\n\n    @include mobile {\n      border: 1px solid color(\"white\");\n      color: color(\"white\");\n      min-width: 120px;\n    }\n  }\n\n  &:after {\n    position: absolute;\n    content: \"\";\n    top: 45%;\n    right: 7%;\n    width: 0;\n    height: 0;\n    border: 6px solid transparent;\n    border-color: color(\"primary\") transparent transparent transparent;\n\n    @include mobile {\n      right: 27%;\n      border-color: color(\"white\") transparent transparent transparent;\n    }\n  }\n\n  @include mobile {\n    display: none;\n  }\n}\n\n.choose-algorythm-container.active {\n  &:after {\n    border-color: transparent transparent color(\"primary\") transparent;\n    top: 30%;\n  }\n}\n\n.choose-algorythm-container.mobile-algorythm-container {\n  display: none;\n\n  @include mobile {\n    display: block;\n    margin-bottom: 1rem;\n  }\n}\n","@mixin button {\n  width: fit-content;\n  min-width: 160px;\n  padding: 1rem 1.5rem 1rem 1.5rem;\n  border-radius: 1000px;\n  text-transform: uppercase;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  border: none;\n  font-size: 18px;\n  transition: all 0.2s ease-in-out;\n\n  @content;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.8;\n\n    @include mobile {\n      opacity: 1;\n    }\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @include mobile {\n    font-size: 14px;\n    min-width: 120px;\n    padding: 0.75rem;\n  }\n}\n\n@mixin fab {\n  padding: 1.2rem;\n  border-radius: 50%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n\n  @content;\n\n  &:not(.disabled):hover {\n    cursor: pointer;\n    transform: rotate(360deg) scale(1.1);\n  }\n\n  @include mobile {\n    padding: 0.8rem;\n  }\n}\n\n@mixin mobile {\n  @media only screen and (max-width: 700px) {\n    @content;\n  }\n}\n","$colors: (\n  \"white\": #fcfcfc,\n  \"primary\": #1d3557,\n  \"secondary\": #a8dadc,\n  \"accent\": #e63946,\n  \"success\": #5cb85c,\n);\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: $rfs-base-value / ($rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: $rfs-base-value / ($rfs-base-value * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + ' ' + if($rfs-unit == rem, #{$value / ($value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + ' ' + if($rfs-unit == px, #{$value / ($value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + ' ' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + ' ' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: $value / ($value * 0 + if($unit == px, 1, 1 / $rfs-rem-value));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + ' ' +  if($rfs-unit == rem, #{$value / $rfs-rem-value}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + (abs($value) - $rfs-base-value) / $rfs-factor;\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{$value-min / $rfs-rem-value}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{$value-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","@import \"../../assets/styles/functions\";\n@import \"../../assets/styles/mixins\";\n\n.array-container {\n  margin: 0 5% 0 5%;\n  height: calc(100vh - 7rem);\n  display: flex;\n  align-items: flex-end;\n\n  @include mobile {\n    height: calc(100vh - 4rem);\n  }\n\n  h1 {\n    margin: 0;\n  }\n\n  .bar {\n    margin: 0 1px 0 1px;\n    border-radius: 1000px 1000px 0 0;\n    background-color: color(\"secondary\");\n\n    &.compared {\n      background-color: color(\"primary\");\n    }\n\n    &.swapped {\n      background-color: color(\"accent\");\n    }\n\n    &.sorted {\n      background-color: color(\"success\");\n    }\n  }\n}\n"]}